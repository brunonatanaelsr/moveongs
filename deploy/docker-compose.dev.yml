version: '3.9'

services:
  api:
    image: node:20-alpine
    working_dir: /workspace
    command: npm run dev
    volumes:
      - ./:/workspace
      - api_node_modules:/workspace/node_modules
    ports:
      - "3333:3333"
    environment:
      NODE_ENV: development
      HOST: 0.0.0.0
      PORT: 3333
      DATABASE_URL: postgres://imm:imm@postgres:5432/imm
      REDIS_URL: redis://redis:6379
      JWT_SECRET: devsecret-please-change-32chars-minimum
      JWT_EXPIRES_IN: 1d
      LOG_LEVEL: debug
      OTEL_ENABLED: 'true'
      OTEL_SERVICE_NAME: moveongs-api-dev
      OTEL_EXPORTER_OTLP_ENDPOINT: http://otel-collector:4318
      OTEL_METRICS_EXPORT_INTERVAL_MS: 15000
      OTEL_METRICS_EXPORT_TIMEOUT_MS: 5000
      OTEL_TRACES_SAMPLER: parentbased_always_on
      FORM_VERIFICATION_BASE_URL: http://localhost:3333/forms/verify
      FORM_VERIFICATION_HASH_SECRET: dev-form-hash-secret-imm-change-me
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_started
      otel-collector:
        condition: service_started

  postgres:
    image: postgres:16
    restart: unless-stopped
    environment:
      POSTGRES_DB: imm
      POSTGRES_USER: imm
      POSTGRES_PASSWORD: imm
    healthcheck:
      test: ["CMD", "pg_isready", "-U", "imm"]
      interval: 10s
      timeout: 5s
      retries: 5
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data

  redis:
    image: redis:7-alpine
    restart: unless-stopped
    ports:
      - "6379:6379"

  otel-collector:
    image: otel/opentelemetry-collector-contrib:0.97.0
    command: ["--config=/etc/otelcol-config.yaml"]
    volumes:
      - ./deploy/otel/collector.dev.yaml:/etc/otelcol-config.yaml:ro
    ports:
      - "4318:4318" # OTLP HTTP ingest
      - "8889:8889" # Prometheus exporter
    depends_on:
      - jaeger

  jaeger:
    image: jaegertracing/all-in-one:1.57
    environment:
      COLLECTOR_OTLP_ENABLED: 'true'
    ports:
      - "16686:16686" # UI
      - "4317:4317"

  prometheus:
    image: prom/prometheus:v2.53.0
    command:
      - --config.file=/etc/prometheus/prometheus.yml
    volumes:
      - ./deploy/prometheus/prometheus.dev.yml:/etc/prometheus/prometheus.yml:ro
    ports:
      - "9090:9090"
    depends_on:
      - otel-collector

  grafana:
    image: grafana/grafana:11.1.4
    environment:
      - GF_SECURITY_ADMIN_USER=admin
      - GF_SECURITY_ADMIN_PASSWORD=admin
      - GF_USERS_ALLOW_SIGN_UP=false
    volumes:
      - grafana_data:/var/lib/grafana
      - ./deploy/grafana/datasources:/etc/grafana/provisioning/datasources:ro
    ports:
      - "3000:3000"
    depends_on:
      - prometheus
      - jaeger

volumes:
  api_node_modules:
  postgres_data:
  grafana_data:
